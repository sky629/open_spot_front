/**
 * Generated by orval 🍺
 * Do not edit manually.
 * Open-Spot API
 * OpenAPI spec version: 1.0.0
 */
import type {
  ApiResponse,
  GetNotificationSettings200,
  GetNotifications200,
  GetNotificationsParams,
  GetUnreadNotificationCount200,
  RegisterDeviceToken200,
  RegisterTokenRequest,
  UpdateNotificationSettings200,
  UpdateSettingsRequest
} from '.././model';

import { customAxiosInstance } from '../../axios-instance';



  export const getNotifications = () => {
/**
 * FCM 푸시 알림을 위한 디바이스 토큰을 등록합니다.
 * @summary 디바이스 토큰 등록
 */
const registerDeviceToken = (
    registerTokenRequest: RegisterTokenRequest,
 ) => {
      return customAxiosInstance<RegisterDeviceToken200>(
      {url: `/api/v1/notifications/tokens`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: registerTokenRequest
    },
      );
    }
  /**
 * 사용자의 알림 목록을 페이지네이션으로 조회합니다.
 * @summary 알림 목록 조회
 */
const getNotifications = (
    params?: GetNotificationsParams,
 ) => {
      return customAxiosInstance<GetNotifications200>(
      {url: `/api/v1/notifications`, method: 'GET',
        params
    },
      );
    }
  /**
 * 사용자의 읽지 않은 알림 개수를 조회합니다.
 * @summary 읽지 않은 알림 수 조회
 */
const getUnreadNotificationCount = (
    
 ) => {
      return customAxiosInstance<GetUnreadNotificationCount200>(
      {url: `/api/v1/notifications/unread-count`, method: 'GET'
    },
      );
    }
  /**
 * 특정 알림을 읽음 상태로 변경합니다.
 * @summary 알림 읽음 처리
 */
const markNotificationAsRead = (
    notificationId: string,
 ) => {
      return customAxiosInstance<ApiResponse>(
      {url: `/api/v1/notifications/${notificationId}/read`, method: 'PUT'
    },
      );
    }
  /**
 * 사용자의 알림 설정을 조회합니다.
 * @summary 알림 설정 조회
 */
const getNotificationSettings = (
    
 ) => {
      return customAxiosInstance<GetNotificationSettings200>(
      {url: `/api/v1/notifications/settings`, method: 'GET'
    },
      );
    }
  /**
 * 사용자의 알림 설정을 업데이트합니다.
 * @summary 알림 설정 업데이트
 */
const updateNotificationSettings = (
    updateSettingsRequest: UpdateSettingsRequest,
 ) => {
      return customAxiosInstance<UpdateNotificationSettings200>(
      {url: `/api/v1/notifications/settings`, method: 'PUT',
      headers: {'Content-Type': 'application/json', },
      data: updateSettingsRequest
    },
      );
    }
  return {registerDeviceToken,getNotifications,getUnreadNotificationCount,markNotificationAsRead,getNotificationSettings,updateNotificationSettings}};
export type RegisterDeviceTokenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['registerDeviceToken']>>>
export type GetNotificationsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['getNotifications']>>>
export type GetUnreadNotificationCountResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['getUnreadNotificationCount']>>>
export type MarkNotificationAsReadResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['markNotificationAsRead']>>>
export type GetNotificationSettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['getNotificationSettings']>>>
export type UpdateNotificationSettingsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getNotifications>['updateNotificationSettings']>>>
