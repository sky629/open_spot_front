/**
 * Generated by orval 🍺
 * Do not edit manually.
 * Open-Spot API
 * OpenAPI spec version: 1.0.0
 */
import type {
  Logout200,
  RefreshToken200
} from '.././model';

import { customAxiosInstance } from '../../axios-instance';



  export const getAuthentication = () => {
/**
 * Google OAuth2 로그인 플로우를 시작합니다.
로그인 성공 시 프론트엔드로 리다이렉트하며, JWT 토큰이 HttpOnly 쿠키로 설정됩니다.

 * @summary Google OAuth2 로그인 시작
 */
const googleLogin = (
    
 ) => {
      return customAxiosInstance<unknown>(
      {url: `/api/v1/auth/google/login`, method: 'GET'
    },
      );
    }
  /**
 * HttpOnly 쿠키의 Refresh 토큰을 사용하여 새로운 Access 토큰을 발급받습니다.
갱신된 토큰은 응답 본문과 함께 HttpOnly 쿠키로도 설정됩니다.

 * @summary JWT 토큰 갱신
 */
const refreshToken = (
    
 ) => {
      return customAxiosInstance<RefreshToken200>(
      {url: `/api/v1/auth/token/refresh`, method: 'POST'
    },
      );
    }
  /**
 * HttpOnly 쿠키의 토큰을 무효화하여 로그아웃합니다.
로그아웃 성공 시 쿠키가 삭제됩니다.

 * @summary 로그아웃
 */
const logout = (
    
 ) => {
      return customAxiosInstance<Logout200>(
      {url: `/api/v1/auth/logout`, method: 'POST'
    },
      );
    }
  return {googleLogin,refreshToken,logout}};
export type GoogleLoginResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthentication>['googleLogin']>>>
export type RefreshTokenResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthentication>['refreshToken']>>>
export type LogoutResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getAuthentication>['logout']>>>
